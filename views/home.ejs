<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title> Bookworms </title>
    <link rel="stylesheet" href="/style.css">
</head>
<body>
    <div class="wrapper">
        <%- include('partials/header') %>
        <%- include('partials/infoBox') %>
        <section class="container">
            <div class="main_search_container">
                <form action="/api/filter/search" method="GET">
                    <input type="text" name="search" class="main_search_input" placeholder="Search for a book" onchange="(v)=> this.value = v">
                    <button type="submit" class="main_search_button"> 
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                            <path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z" />
                        </svg>
                    </button>
                </form>
                <form action="/api/filter/filterAndSort" mehtod="GET">
                    <% if (categoriesOptions || subcategoriesOptions) { %>
                        <label> Sort </label>
                        <select name="sort" class="main_search_sort" onchange="this.form.submit()">
                            <option value="" <% if(!sort) { %> selected <% } %>> --- </option>
                            <option value="title" <% if(sort === 'title') { %> selected <% } %>> Title </option>
                            <option value="author" <% if(sort === 'author') { %> selected <% } %>> Author </option>
                            <option value="price" <% if(sort === 'price') { %> selected <% } %>> Price </option>
                            <option value="pages" <% if(sort === 'pages') { %> selected <% } %>> Pages </option>
                        </select>
                        <div class="main_search_separator"></div>
                        <label> Filter </label>
                        <select id="category_select" name="category" class="main_search_filter_category" onchange="this.form.submit()">
                            <option value="" <% if(!category) { %> selected <% } %>> --- </option>
                            <% categoriesOptions.forEach(element => { %>
                                <option value="<%=element%>" <% if(category === element) { %> selected <% } %>> <%= element %> </option>
                            <% }) %>
                        </select>
                        <select id="subcategory_select" name="subcategory" class="main_search_filter_subcategory" onchange="this.form.submit()">
                            <option value="" <% if(!subcategory) { %> selected <% } %>> --- </option>
                            <% subcategoriesOptions.forEach(element => { %>
                                <option value="<%=element%>" <% if(subcategory === element) { %> selected <% } %>> <%= element %> </option>
                            <% }) %>
                        </select>
                        <div class="main_search_separator"></div>
                        <label> Order </label>
                        <select name="order" class="main_search_order" onchange="this.form.submit()">
                            <option value="" <% if(!order) { %> selected <% } %>> --- </option>
                            <option value="asc" <% if(order === 'asc') { %> selected <% } %>> Asc </option>
                            <option value="desc" <% if(order === 'desc') { %> selected <% } %>> Desc </option>
                        </select>
                    <% } else { %>

                    <% } %>
                </form>
            </div>

            <% if (errorMessage) { %>
                <p class="main_books_error_message"> <%= errorMessage %> </p>
            <% } else if(books.length === 0) { %>
                <p class="main_books_error_message"> No books found! </p>
            <% } else { %>
                <div class="main_books_container">
                <% books.forEach(element => { %>
                <%- include('partials/book_card.ejs', { book: element }) %>
                <% }); %>
                </div>
            <% } %>
        </section>
        <%- include('partials/footer') %>
    </div>
</body>
<script>
    const addToCartButtons = document.querySelectorAll('.book_card_container_addToCart');
    
    const infoBox = document.querySelector('.info-box_container');
    const infoBoxText = document.querySelector('.info-box_text');

    const categoriesElement = document.getElementById('category_select');
    const subcategoriesElement = document.getElementById('subcategory_select');

    document.addEventListener('DOMContentLoaded', () => {

        if(sessionStorage.getItem('showInfoBox') === 'true')
        {
            setTimeout(() => {
                infoBoxText.textContent = sessionStorage.getItem('infoBoxText');

                if(sessionStorage.getItem('infoBoxSuccess') === 'true')
                {
                    infoBox.classList.add('info-box_success');
                }

                sessionStorage.removeItem('infoBoxSuccess');
                sessionStorage.removeItem('infoBoxText');
                sessionStorage.removeItem('showInfoBox');

                infoBox.classList.remove('info-box_hidden');
                setTimeout(() => {
                    infoBox.classList.add('info-box_hidden');
                }, 4000);

                setTimeout(() => {
                    infoBox.classList.remove('info-box_success');
                }, 5000)

                
            }, 500);
        }
        
        addToCartButtons.forEach(button => {
            button.addEventListener('click', async (event) => {
                event.preventDefault();

                try
                {
                    const response = await fetch('/api/checkLogedState', {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if(response.status == 200)
                    {
                        const bookTitle = button.getAttribute('data-title');

                        const response = await fetch('/api/addToCart', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ title: bookTitle })
                        });

                        if(response.status == 200)
                        {
                            //display success message
                            infoBoxText.textContent = `Book '${bookTitle}' added to cart`;
                            infoBox.classList.add('info-box_success');
                            infoBox.classList.remove('info-box_hidden');
                            setTimeout(() => {
                                infoBox.classList.add('info-box_hidden');
                            }, 4000);
                        }
                        else
                        {
                            //display error message
                            infoBoxText.textContent = 'Error adding book to cart. Try again later!';
                            infoBox.classList.remove('info-box_success');
                            infoBox.classList.remove('info-box_hidden');
                            setTimeout(() => {
                                infoBox.classList.add('info-box_hidden');
                            }, 4000);
                        }
                    }
                    else
                    {
                        //display error message
                        infoBoxText.textContent = 'You must be logged in to add a book to the cart';
                        infoBox.classList.remove('info-box_success');
                        infoBox.classList.remove('info-box_hidden');
                        setTimeout(() => {
                            infoBox.classList.add('info-box_hidden');
                        }, 4000);
                    }

                }
                catch(error)
                {
                    console.error('Error adding book to cart');
                }
            });
        });
    });
</script>
</html>